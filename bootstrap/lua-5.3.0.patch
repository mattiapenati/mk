diff -rupN a/linit.c b/linit.c
--- a/linit.c	2015-06-20 14:31:11.479442917 +0000
+++ b/linit.c	2015-06-20 14:32:29.055445462 +0000
@@ -56,6 +56,17 @@ static const luaL_Reg loadedlibs[] = {
   {NULL, NULL}
 };
 
+int luaopen_linenoise(lua_State *L);
+int luaopen_lfs(lua_State *L);
+int luaopen_posix_c(lua_State *L);
+
+static const luaL_Reg preloadedlibs[] = {
+  {"linenoise",luaopen_linenoise},
+  {"lfs",luaopen_lfs},
+  {"posix",luaopen_posix_c},
+  {NULL, NULL}
+};
+
 
 LUALIB_API void luaL_openlibs (lua_State *L) {
   const luaL_Reg *lib;
@@ -64,5 +75,12 @@ LUALIB_API void luaL_openlibs (lua_State
     luaL_requiref(L, lib->name, lib->func, 1);
     lua_pop(L, 1);  /* remove lib */
   }
+  /* add open functions from 'preloadedlibs' into 'package.preload' table */
+  luaL_getsubtable(L, LUA_REGISTRYINDEX, "_PRELOAD");
+  for (lib = preloadedlibs; lib->func; lib++) {
+    lua_pushcfunction(L, lib->func);
+    lua_setfield(L, -2, lib->name);
+  }
+  lua_pop(L, 1);  /* remove _PRELOAD table */
 }
 
diff -rupN a/lua.c b/lua.c
--- a/lua.c	2015-06-20 14:31:11.475442917 +0000
+++ b/lua.c	2015-06-20 14:31:24.847443356 +0000
@@ -73,8 +73,6 @@
 ** lua_saveline defines how to "save" a read line in a "history".
 ** lua_freeline defines how to free a line read by lua_readline.
 */
-#if !defined(lua_readline)	/* { */
-
 #if defined(LUA_USE_READLINE)	/* { */
 
 #include <readline/readline.h>
@@ -85,6 +83,17 @@
           add_history(lua_tostring(L, idx));  /* add it to history */
 #define lua_freeline(L,b)	((void)L, free(b))
 
+#elif defined(LUA_USE_LINENOISE)
+
+#include <stdio.h>
+#include <linenoise.h>
+
+#define lua_readline(L,b,p)     ((void)L, ((b)=linenoise(p)) != NULL)
+#define lua_saveline(L,idx) \
+        if (lua_rawlen(L,idx) > 0)  /* non-empty line? */ \
+          linenoiseHistoryAdd(lua_tostring(L, idx));  /* add it to history */
+#define lua_freeline(L,b)       ((void)L, free(b))
+
 #else				/* }{ */
 
 #define lua_readline(L,b,p) \
@@ -95,8 +104,6 @@
 
 #endif				/* } */
 
-#endif				/* } */
-
 
 
 
