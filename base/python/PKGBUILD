#!/bin/bash

pkgname=python
pkgver=2.7.10
archive=Python-$pkgver.tar.xz
sum=ee5a50c5562e7448f037d35fdedc18d95c748b9e

dstdir=$mkToolchainBase

build() {
  download https://www.python.org/ftp/python/$pkgver/$archive
  check $archive $sum
  extract $archive

  pushd Python-$pkgver
    # ensure to use system libraries
    rm -rf Modules/{expat,zlib,_ctypes/{darwin,libffi}*}
    # fixing the system paths
    sed -i "s:/usr/include:$mkToolchainBase/include:g" setup.py
    sed -i "s:/usr/lib:$mkToolchainBase/lib:g" setup.py
    message "Configuring $pkgname"
    # --with-dbmliborder=bdb:gdbm
    #   Use this switch if you want to build Python DBM Module against Berkeley
    #   DB instead of GDBM
    ./configure --build=$TARGET --prefix="$dstdir" --enable-shared \
                --with-threads --enable-ipv6 --enable-unicode=ucs4 \
                --with-system-expat --with-system-ffi --without-ensurepip \
                --with-dbmliborder=bdb:gdbm:ndbm
    message "Compiling $pkgname"
    make
  popd
}

package() {
  make -C Python-$pkgver install
  strip "$dstdir"/bin/python${pkgver%.*}
  chmod 0755 "$dstdir"/lib/libpython${pkgver%.*}.so.?.?
  strip "$dstdir"/lib/libpython${pkgver%.*}.so.?.?
  compress_doc "$dstdir"/share/man/man1/python{,2,${pkgver%.*}}.1
  update_linker_cache

  # installing setuptools and pip
  if [[ ! "$mkTest" = "no" ]]; then
    export LD_LIBRARY_PATH="$dstdir"/lib
  fi
  download https://bootstrap.pypa.io/ez_setup.py ez_setup.py
  "$dstdir"/bin/python ez_setup.py
  download https://bootstrap.pypa.io/get-pip.py get-pip.py
  "$dstdir"/bin/python get-pip.py
}
