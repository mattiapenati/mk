diff -Naur a/SRC/dreadMM.c b/SRC/dreadMM.c
--- a/SRC/dreadMM.c	2015-07-18 02:54:17.000000000 +0000
+++ b/SRC/dreadMM.c	2016-04-07 22:51:30.544411315 +0000
@@ -214,7 +214,7 @@
 }
 
 
-void dreadrhs(int m, double *b)
+static void dreadrhs(int m, double *b)
 {
     FILE *fp, *fopen();
     int i;
diff -Naur a/SRC/dreadtriple.c b/SRC/dreadtriple.c
--- a/SRC/dreadtriple.c	2015-07-18 02:54:17.000000000 +0000
+++ b/SRC/dreadtriple.c	2016-04-07 22:51:44.973194562 +0000
@@ -150,7 +150,7 @@
 }
 
 
-void dreadrhs(int m, double *b)
+static void dreadrhs(int m, double *b)
 {
     FILE *fp, *fopen();
     int i;
diff -Naur a/SRC/dscatter.c b/SRC/dscatter.c
--- a/SRC/dscatter.c	2015-07-18 02:54:17.000000000 +0000
+++ b/SRC/dscatter.c	2016-04-07 23:00:37.948172039 +0000
@@ -304,7 +304,7 @@
 
 typedef struct pair pair;
 
-int_t
+static int_t
 get_min (int_t * sums, int_t nprocs)
 {
     int_t min_ind, min_val;
@@ -322,13 +322,13 @@
     return min_ind;
 }
 
-int
+static int
 compare_pair (const void *a, const void *b)
 {
     return (((pair *) a)->val - ((pair *) b)->val);
 }
 
-int_t
+static int_t
 static_partition (pair * work_load, int_t nwl, int_t * partition, int_t ldp,
                   int_t * sums, int_t * counts, int nprocs)
 {
diff -Naur a/SRC/pdgstrf.c b/SRC/pdgstrf.c
--- a/SRC/pdgstrf.c	2016-01-07 01:22:47.000000000 +0000
+++ b/SRC/pdgstrf.c	2016-04-07 23:01:28.878403848 +0000
@@ -161,7 +161,7 @@
 #endif
 
 
-int get_thread_per_process()
+static int get_thread_per_process()
 {   
     char* ttemp; 
     ttemp = getenv("THREAD_PER_PROCESS");
@@ -170,7 +170,7 @@
     else return 1;
 }
 
-int
+static int
 get_mic_offload ()
 {
     char *ttemp;
@@ -182,7 +182,7 @@
         return 0;
 }
 
-int_t
+static int_t
 get_max_buffer_size ()
 {
     char *ttemp;
@@ -193,7 +193,7 @@
         return 5000000;
 }
 
-int_t
+static int_t
 get_cublas_nb ()
 {
     char *ttemp;
@@ -204,7 +204,7 @@
         return 64;
 }
 
-int_t
+static int_t
 get_num_cuda_streams ()
 {
     char *ttemp;
@@ -218,7 +218,7 @@
 /*int omp_get_num_threads (void);
   int omp_get_thread_num (void);*/
 
-int AssignMic(int my_rank)
+static int AssignMic(int my_rank)
 {
     return (my_rank+1)%2;
 }
diff -Naur a/SRC/pzgstrf.c b/SRC/pzgstrf.c
--- a/SRC/pzgstrf.c	2016-01-06 01:48:40.000000000 +0000
+++ b/SRC/pzgstrf.c	2016-04-07 23:01:04.689768699 +0000
@@ -160,7 +160,7 @@
 #endif
 
 
-int get_thread_per_process()
+static int get_thread_per_process()
 {   
     char* ttemp; 
     ttemp = getenv("THREAD_PER_PROCESS");
@@ -169,7 +169,7 @@
     else return 1;
 }
 
-int
+static int
 get_mic_offload ()
 {
     char *ttemp;
@@ -181,7 +181,7 @@
         return 0;
 }
 
-int_t
+static int_t
 get_max_buffer_size ()
 {
     char *ttemp;
@@ -192,7 +192,7 @@
         return 5000000;
 }
 
-int_t
+static int_t
 get_cublas_nb ()
 {
     char *ttemp;
@@ -203,7 +203,7 @@
         return 64;
 }
 
-int_t
+static int_t
 get_num_cuda_streams ()
 {
     char *ttemp;
@@ -217,7 +217,7 @@
 /*int omp_get_num_threads (void);
   int omp_get_thread_num (void);*/
 
-int AssignMic(int my_rank)
+static int AssignMic(int my_rank)
 {
     return (my_rank+1)%2;
 }
diff -Naur a/SRC/zreadMM.c b/SRC/zreadMM.c
--- a/SRC/zreadMM.c	2015-07-18 02:54:17.000000000 +0000
+++ b/SRC/zreadMM.c	2016-04-07 23:02:24.245568640 +0000
@@ -213,7 +213,7 @@
 }
 
 
-void zreadrhs(int m, doublecomplex *b)
+static void zreadrhs(int m, doublecomplex *b)
 {
     FILE *fp, *fopen();
     int i;
diff -Naur a/SRC/zreadtriple.c b/SRC/zreadtriple.c
--- a/SRC/zreadtriple.c	2015-07-18 02:54:17.000000000 +0000
+++ b/SRC/zreadtriple.c	2016-04-07 23:01:56.105993134 +0000
@@ -149,7 +149,7 @@
 }
 
 
-void zreadrhs(int m, doublecomplex *b)
+static void zreadrhs(int m, doublecomplex *b)
 {
     FILE *fp, *fopen();
     int i;
diff -Naur a/SRC/zscatter.c b/SRC/zscatter.c
--- a/SRC/zscatter.c	2015-07-18 02:54:17.000000000 +0000
+++ b/SRC/zscatter.c	2016-04-07 23:00:07.849625983 +0000
@@ -304,7 +304,7 @@
 
 typedef struct pair pair;
 
-int_t
+static int_t
 get_min (int_t * sums, int_t nprocs)
 {
     int_t min_ind, min_val;
@@ -322,13 +322,13 @@
     return min_ind;
 }
 
-int
+static int
 compare_pair (const void *a, const void *b)
 {
     return (((pair *) a)->val - ((pair *) b)->val);
 }
 
-int_t
+static int_t
 static_partition (pair * work_load, int_t nwl, int_t * partition, int_t ldp,
                   int_t * sums, int_t * counts, int nprocs)
 {
